// Keep the following line for generating twtest reports
// TWTEST matplotlib xyzt=0,: air.npy units=cgs

// Same physical problem as 1d shock example (numerical parameters coarsened somewhat)
// Asymmetries intentionally put into wall boundary conditions and initial conditions
// Due to boundary conditions mass and energy can be lost
dtmax = 100 [ps]
maxtime = 100 [ns]
dump period = 0
moving window = no
neutralize = yes
unit density = 2.8e+19

xboundary = ( open  reflecting )
yboundary = ( open  open )
zboundary = ( open  open )

// wp^-1 = 3.350 fs
// c/wp = 1.004 um
// E_br = 5.088e6 kV/cm

new grid
{
	steps = 5000
	origin = ( 0 , 0.5 , 0.5 , 0.5 )
	dimensions = ( 1, 200, 200, 1 )
	cell size = ( 30 [ps], 5, 5, 1 )
	decomposition = ( 1, 2, 2, 1 )
	geometry = cartesian
	adaptive timestep = on
}

new hydrodynamics
{
	epsilon factor = 0.001
	radiation model = none
}

new chemical air
{
	charge = 0.0
	mass = 51078.5
	cv = 2.5
	thermometric conductivity = 0.2[cm2/s]
	kinematic viscosity = 0.15[cm2/s]
}

generate uniform air
{
	density = 2.8e19[/cm3]
	temperature = 300[K]
}

generate gaussian air
{
	type = energy
	position = (100 -100 0)
	density = 11500 [J/cm3]
	size = (20 20 20)
}

new box diagnostic
{
	time period = 4[ns]
}

new energy diagnostic
{
	time period = 4[ns]
}
