// Keep the following line for generating twtest reports
// TWTEST matplotlib zxyt=0,11 phi.npy

dump period = 0
moving window = no
neutralize = yes
unit density = 1e+19

xboundary = ( periodic , periodic )
yboundary = ( periodic , periodic )
zboundary = ( absorbing , absorbing )

// wp^-1 = 5.60883 fs
// c/wp = 1.68265 um
// E_br = 304.208 GV/m

new grid
{
	origin = ( 0, 0.5, 0.5, 0 )
	dimensions = ( 7500, 128, 1, 1200 )
	cell size = ( 0.04, 0.5, 1.0, 0.05 )
	decomposition = ( 1, 1, 1, 1 )
}

new coulomb electromagnetic module 'coul'
{
}

new facr elliptic solver for 'coul'
{
	zboundary = ( dirichlet , neumann )
}

new hermite gauss for 'coul'
{
	a = ( 0 , 0.56 , 0 )
	direction = ( 0 , 0 , 1 )
	focus position = ( 0 , 0 , 0 )
	delay = 0
	risetime = 300
	holdtime = 0
	falltime = 300
	w = 4
	r0 = ( 1e5 , 10 )
	exponent = ( 1 , 1 ) // odd induces cos^(exponent+1)
}

new hermite gauss for 'coul'
{
	a = ( 0 , 0.56 , 0 )
	direction = ( 0 , 0 , 1 )
	focus position = ( 0 , 0 , 0 )
	delay = 0
	risetime = 300
	holdtime = 0
	falltime = 300
	w = 5
	r0 = ( 1e5 , 10 )
	exponent = ( 1 , 1 ) // odd induces cos^(exponent+1)
}

new species 'e'
{
	charge = -1
	mass = 1
	emission temperature = ( 0.1 , 0.1 , 0.1 )
	particles per cell = ( 4 , 1 , 4 ) when density = 1
	zboundary = (emitting emitting)
}

generate uniform 'e'
{
	loading = deterministic
	particle weight = fixed
	density = 1
	thermal momentum = ( 0.1 , 0.1 , 0.1 )
}

new box diagnostic
{
	period = 500
}

new energy diagnostic
{
	period = 200
}
