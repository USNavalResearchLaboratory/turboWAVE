// Keep the following line for generating twtest reports
// TWTEST matplotlib zxyt=0,: test.npy dr=4.0 units=atomic

// Bohmian particles in a Rabi oscillation
// The Rabi frequency is 0.0137 a.u.
// We run for 1/2 the Rabi period, so that the atom should end up in a 2p state

// This also illustrates the population diagnostic which computes the occupation
// probability of a given reference state.

unit density = 2.8e19 // only used if post-processing wants to display plasma units
native units = atomic

steps = 25000
timestep = 0.01
dump period = 0

xboundary = ( axisymmetric , absorbing )
yboundary = ( periodic , periodic )
zboundary = ( absorbing , absorbing )

new grid
{
	corner = ( 0 , -3.1416 , -20.48 )
	dimensions = ( 512 , 1 , 2048 )
	cell size = ( 0.02 , 6.2832 , 0.02 )
	decomposition = ( 4 , 1 , 8 )
	geometry = cylindrical
}

new schroedinger equation module 'tdse'
{
	soft core potential , charge = 1.0 , radius = 0.04
	// bound states : -0.494 , -0.125
	relaxation time = 20.0
	new qstate random 'random_state'
	{
		amplitude = ( 1.0 , 0.0 )
		size = 5.0 5.0 5.0
	}
}

new population diagnostic 'pop'
{
	new qstate bound '1s'
	{
		nr_j_l_m = 0.0 0.0 0.0 0.0
		amplitude = 1.0 0.0
	}
	new qstate bound '2p'
	{
		nr_j_l_m = 0.0 1.0 1.0 0.0
		amplitude = 1.0 0.0
	}
}

new plane wave for 'tdse'
{
	direction = 1 0 0
	a = 0.0 0.0 0.05
	w = 0.369
	focus position = 0 0 0
	delay = 20
	risetime = 0.01
	holdtime = 1e10
	falltime = 0.01
	phase = 0
}

new plane wave for 'tdse'
{
	direction = 1 0 0
	a = 0.0 0.0 -0.05
	w = 0.0
	focus position = 0 0 0
	delay = 20
	risetime = 0.01
	holdtime = 1e10
	falltime = 0.01
	phase = 0
}

new species test
{
	particles per cell = 4 4 1 when density = 1
}

generate gaussian test
{
	density = 1.0
	size = 1.0 1.0 1.0
	// following loading conditions cause density to be commensurate with |psi|^2
	t0 = 20.01
	loading = statistical
	particle weight = fixed
}

new box diagnostic
{
	period = 1000
}

new energy diagnostic
{
	period = 1000
}
